# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.16.0.1

# Text to speech
tts:
  - platform: google_cloud
    key_file: service_account.json
    voice: pt-BR-Wavenet-A

python_script:

alexa:
  smart_home:
    locale: pt-BR
    endpoint: https://api.amazonalexa.com/v3/events
    client_id: !secret alexa_client_id 
    client_secret: !secret alexa_client_secret
    # filter:
    #   include_entities:
    #     - light.kitchen
    #     - light.kitchen_left
    #   include_entity_globs:
    #     - binary_sensor.*_motion
    #   include_domains:
    #     - switch
    #   exclude_entities:
    #     - switch.outside
    # entity_config:
    #   light.kitchen:
    #     name: "Custom Name for Alexa"
    #     description: "The light in the kitchen"
    #   switch.stairs:
    #     display_categories: LIGHT

google_assistant:
  project_id: !secret google_project_id
  service_account: !include service_account.json
  report_state: true
  expose_by_default: true
  exposed_domains:
    - light
    - sensor
    - switch
  # entity_config:
  #   light.wled:
  #     expose: true
  #     name: Kitchen Lights
  #   light.luz_do_coquero:
  #     expose: true
  #     name: Plant Light
  #   sensor.bedroom_temperature:
  #     expose: true
  #     name: Bedroom Temperature
  #   sensor.bmp_temperature_2:
  #     expose: true
  #     name: Outside temperature
  #   switch.smartplug_2:
  #     expose: true
  #     name: LogPlug
  #   camera.first_led_hardware_instance:
  #     expose: true
  #     name: TvSala
  #   light.wled_3:
  #     expose: true
  #     name: WledTV
  #   light.aquarium_lights:
  #     expose: true
  #     name: Aquarium Lights
  #   switch.heater:
  #     expose: true
  #     name: Aquarium Heater
  #   switch.speaker_power:
  #     expose: true
  #     name: Speaker Power
  #   switch.speaker_bluetooth:
  #     expose: true
  #     name: Speaker Bluetooth
  #   switch.volume_boost:
  #     expose: true
  #     name: Speaker Volume Boost
  #   light.speakerlight:
  #     expose: true
  #     name: Speaker Light

logger:
  default: warning

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
frontend:
  themes: !include_dir_merge_named ./themes

lovelace:

# openhasp: !include openhasp.yaml

# circadian_lighting:
#   sunrise_time: "10:00:00"
#   sunset_time: "16:00:00"

ifttt:
  key: !secret iftttkey

panel_iframe:
  tasmoadmin:
    title: TasmoAdmin
    icon: mdi:lightbulb-on
    url: http://192.168.0.10:9541
  tautulli:
    title: Tautulli
    icon: mdi:plex
    url: https://tautuli.local.gashome.org

homeassistant:
  customize: !include customize.yaml
  media_dirs:
    local: /media
  allowlist_external_dirs:
    #   - /media/boiole/
    - /config/openhasp
  allowlist_external_urls:
    - https://hass.gashome.org/

mobile_app:
esphome:

recorder:
  db_url: !secret pm_mariadb_conn_string
  auto_purge: false
  purge_keep_days: 30
  commit_interval: 3
  exclude:
    domains:
      - automation
      - updater
      - calendar
      - camera
    entities:
      - sensor.goes_datetime
      - sensor.goes16c13
      #  - sensor.memory_use_percent
      #  - sensor.load_1m
      - sun.sun
    #  - sensor.cpu_temperature
    entity_globs:
      - sensor.nextcloud_*
      - sensor.plogger*

influxdb:
  host: a0d7b954-influxdb
  port: 8086
  database: homeassistant
  username: homeassistant
  password: !secret influxdb_pass
  #host: localhost
  #api_version: 2
  #token: !secret influxdb_pass
  #organization: wgas
  #bucket: homeassistant
  max_retries: 3
  default_measurement: state
  ssl: false
  # exclude:
  #   domains:
  #     - automation
  #     - updater
  #     - calendar
  #     - camera
  #   entities:
  #     - sensor.goes_datetime
  #     - sensor.goes16c13
  #   #  - sensor.memory_use_percent
  #   #  - sensor.load_1m
  #     - sun.sun
  #   #  - sensor.cpu_temperature
  #   entity_globs:
  #     - sensor.nextcloud_*
  #   #  - sensor.plogger*

nextcloud:
  url: https://xyz.duckdns.org/
  username: !secret nextcloud_username
  password: !secret nextcloud_pass

# octoprint:
#     api_key: !secret octoprint_api_key
#     host: 192.168.0.43
#     number_of_tools: 2
#     bed: true

spotcast:
  sp_dc: !secret spotcast_sp_dc
  sp_key: !secret spotcast_sp_key

# rest_command:
#   assistant_broadcast:
#     url: http://192.168.0.10:3000/assistant
#     method: POST
#     content_type: "application/json"
#     payload: '{"command":"{{ command }}", "user":"wesley", "broadcast":true}'

#   assistant_converse:
#     url: http://192.168.0.10:3000/assistant
#     method: POST
#     content_type: "application/json"
#     payload: '{"command":"{{ command }}", "user":"wesley", "converse":true}'

#   assistant_relay:
#     url: http://192.168.0.10:3000/assistant
#     method: POST
#     content_type: "application/json"
#     payload: '{"command":"{{ command }}", "user":"wesley"}'


notify:
  # - platform: clicksend
  #   name: ClickSend
  #   username: !secret my_email
  #   api_key: !secret clicksend_api_key
  #   recipient: !secret my_phone_number
  # - name: sms_wes
  #   platform: twilio_sms
  #   from_number: !secret my_phone_number
  # - platform: smtp
  #   name: HASS_MAIL
  #   server: smtp.gmail.com
  #   port: 587
  #   timeout: 15
  #   sender: !secret auto_email
  #   encryption: starttls
  #   username: !secret auto_email
  #   password: !secret auto_passwd
  #   recipient:
  #     - !secret my_email
  #   sender_name: My Home Assistant
  - platform: html5
    name: wgas_html5
    vapid_pub_key: !secret vapid_pub_key
    vapid_prv_key: !secret vapid_prv_key
    vapid_email: !secret vapid_email

# mysensors:
#   gateways:
#     - device: '127.0.0.1'
#       persistence_file: '/config/mysensors.json'
#       tcp_port: 5003
#   version: '2.3'

# switch:
#   - platform: mqtt
#     name: Hyperion Sala
#     unique_id: "hyperionsala"
#     command_topic: "cmd/hyperionswitch/sala"
#     state_topic: "status/hyperionswitch/sala"
#     state_on: "on"
#     state_off: "off"
#     payload_on: start
#     payload_off: stop
#     qos: 1
#     retain: true
#   - platform: circadian_lighting
#     lights_ct:
#       - light.aquarium_lights
#     max_brightness: 60

binary_sensor:
  - platform: workday
    country: BR
    province: SP
  # - platform: octoprint
  #   monitored_conditions:
  #     - Printing
  #     - Printing Error

mqtt:
  binary_sensor:
    # - name: platelet motion
    #   state_topic: hasp/plate/state/input21
    #   availability:
    #     - topic: hasp/plate/LWT
    #   device_class: motion
    #   value_template: "{{ value_json.state }}"
    #   payload_on: "on"
    #   off_delay: 15
    - name: cozinha motion
      state_topic: wled/cozinha/motion/1
      unique_id: "cozinha_motion_wled"
      availability:
        - topic: wled/cozinha/status
          payload_available: "online"
          payload_not_available: "offline"
      device_class: motion
      # value_template: "{{ value_json.state }}"
      payload_on: "on"
      payload_off: "off"
  light:
    - name: Luz do Coquero
      unique_id: "luz_coqueiro"
      command_topic: 82_b/light/fastled_ws2811_light/command
      state_topic: 82_b/light/fastled_ws2811_light/state
      optimistic: true
      retain: true
      qos: 0

sensor:
  # - platform: filter
  #   name: "filtered CPU temperature"
  #   entity_id: sensor.processor_temperature
  #   filters:
  #     - filter: time_simple_moving_average
  #       window_size: "00:02"
  - platform: filter
    name: "filtered soil temperature"
    entity_id: sensor.ntc10k_a1_gnd
    filters:
      - filter: time_simple_moving_average
        window_size: "00:20"
        precision: 2
  - platform: filter
    name: "filtered soil humidity"
    entity_id: sensor.soil_a2_gnd
    filters:
      - filter: time_simple_moving_average
        window_size: "00:20"
        precision: 2
  - platform: filter
    name: "filtered battery voltage"
    entity_id: sensor.ads1115_channel_a0_gnd_2
    filters:
      - filter: outlier
        window_size: 4
        radius: .04

  - platform: rest
    scan_interval: 2592000
    resource: https://dadosabertos.aneel.gov.br/api/3/action/datastore_search_sql?sql=SELECT%20*%20from%20%22fcf2906c-7c32-4b9b-a637-054e7a5234f4%22%20WHERE%20%22DscSubGrupo%22%20=%20%27B1%27%20and%20%22DscClasse%22%20=%20%27Residencial%27%20and%20%22DscModalidadeTarifaria%22%20=%20%27Convencional%27%20and%20%22NumCNPJDistribuidora%22%20=%20%2761695227000193%27%20and%20%22DscBaseTarifaria%22%20=%20%27Tarifa%20de%20Aplica%C3%A7%C3%A3o%27%20and%20%22DscSubClasse%22%20=%20%27Residencial%27%20and%20TO_DATE(%22DatInicioVigencia%22,%20%27YYYY-MM-DD%27)%20%3C=%20CURRENT_DATE%20and%20TO_DATE(%22DatFimVigencia%22,%20%27YYYY-MM-DD%27)%20%3E=%20CURRENT_DATE
    name: Tarifa Atual
    json_attributes_path: result.records[0]
    json_attributes:
      - _id
      - DatGeracaoConjuntoDados
      - DscREH
      - SigAgente
      - NumCNPJDistribuidora
      - DatInicioVigencia
      - DatFimVigencia
      - DscBaseTarifaria
      - DscSubGrupo
      - DscModalidadeTarifaria
      - DscClasse
      - DscSubClasse
      - DscDetalhe
      - NomPostoTarifario
      - DscUnidadeTerciaria
      - SigAgenteAcessante
      - VlrTUSD
      - VlrTE
    value_template: OK
  - platform: template
    sensors:
      tarifa_kwh:
        unit_of_measurement: BRL/kWh
        value_template: >-
          {{((state_attr('sensor.tarifa_atual','VlrTUSD')| replace(",",".") |float)
          +
          (state_attr('sensor.tarifa_atual','VlrTE')| replace(",",".") |float))*1.13/1000}}
  - platform: rest
    resource: http://satelite.cptec.inpe.br/collection/lista/5388
    name: GOES16C13
    json_attributes_path: "$.list.[0]"
    json_attributes:
      - fileDate
      - fileTime
      - description
    value_template: '{{ value_json["list"][0]["url"] }}'
    scan_interval: 300
  - platform: template
    sensors:
      goes_datetime:
        value_template: >-
          {% set goesDateTime = 
            state_attr('sensor.goes16c13','fileDate') + ' ' + state_attr('sensor.goes16c13','fileTime') 
          %}
          {{ ((as_timestamp(goesDateTime)|int ) - 3*3600) | timestamp_local }}
      goes_description:
        value_template: "{{ state_attr('sensor.goes16c13','description') }}"
  - platform: systemmonitor
    resources:
      - type: load_1m
      - type: memory_use_percent
      - type: throughput_network_in
        arg: enp6s18
      - type: throughput_network_out
        arg: enp6s18
      # - type: processor_temperature
      - type: processor_use
  #   - platform: authenticated
  # - platform: mqtt
  #   unique_id: "coq_hum"
  #   name: "Coqueiro"
  #   state_topic: "varanda/sensors/soil_humidity"
  #   unit_of_measurement: 'u'
  - platform: moon
  - platform: template
    sensors:
      euro:
        value_template: "{{((states('sensor.open_exchange_rates_usd_brl') | float)/(states('sensor.exchange_rate_sensor') | float)) | round(3)}} "
        friendly_name: "Cotação Euro"
        unit_of_measurement: "BRL"
      dolar:
        value_template: "{{(states('sensor.open_exchange_rates_usd_brl') | float) | round(3) }}"
        friendly_name: "Cotação Dolar"
        unit_of_measurement: "BRL"
      coq_sensor_power_delay:
        value_template: "{{ states.input_number.coq_sensor_power_delay.state | int }}"
      tv_media_title:
        value_template: '''
          {% if state_attr("media_player.living_room_tv", "media_title") %}
          {{state_attr("media_player.living_room_tv", "media_title")}}
          {%- elif state_attr("media_player.living_room_tv", "media_content_id") -%}
          {{state_attr("media_player.living_room_tv", "media_content_id")}}
          {%- endif %}
          '''
      time:
        friendly_name: "Time now"
        value_template: "{{ as_timestamp(states('sensor.date_time_iso')) | timestamp_custom('%H:%M') }}"
        icon_template: mdi:calendar-clock
  - platform: time_date
    display_options:
      - "date_time_iso"

# light:
# - platform: mqtt
#   name: Luz do Coquero
#   unique_id: "luz_coqueiro"
#   command_topic: 82_b/light/fastled_ws2811_light/command
#   state_topic: 82_b/light/fastled_ws2811_light/state
#   optimistic: true
#   retain: true
#   rgb: true
#   brightness: true
#   schema: json
#   qos: 0
# - platform: rpi_gpio_pwm
#   leds:
#     - name: RPIFan
#       driver: gpio
#       pins: [18]
#       type: simple
# input_number:
#   ledspeed:
#     name: Speed
#     initial: 0
#     min: 0
#     max: 255
#     step: 1
#   ledintensity:
#     name: Intensity
#     initial: 0
#     min: 0
#     max: 255
#     step: 1

template:
  - sensor:
      - name: "Total Energy Consumption"
        state: "{{states('sensor.energy_total_2')|float}}"
        icon: mdi:transmission-tower-export
        unique_id: "total_energy_consumption"
        #last_reset: '1970-01-01T00:00:00+00:00'
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing
      - name: "miband Battery Percentage"
        state: "{{states('sensor.miband_notify_battery')|float(None)}}"
        unit_of_measurement: "%"
        device_class: battery
        unique_id: "miband5_battery_percentage"
      - name: "miband Heartrate sensor"
        state: "{{states('sensor.miband_notify_heartrate')|int(None)}}"
        unit_of_measurement: "bpm"
        device_class: battery
        unique_id: "miband5_heartrate"
      - name: "miband Sleep Duration"
        state: "{{states('sensor.miband_notify_sleepduration')|int(None)}}"
        unit_of_measurement: "minutes"
        unique_id: "miband5_sleep_duration"
      - name: "miband Daily Steps"
        unit_of_measurement: steps
        state: "{{states('sensor.miband_notify_steps')|int(None)}}"
        unique_id: "miband5_steps"
